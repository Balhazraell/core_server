{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/src/chunck.js","webpack:///./js/src/main.js","webpack:///./js/src/mouse_manager.js","webpack:///./js/src/websockets.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;;AAEX,wB;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kCAAkC;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,K;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,C;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2CAA2C,M;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,K;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gC;;;;;;;;;;;ACnMA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA,oC;;;;;;;;;;;;ACxBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4C","file":"main_build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/src/main.js\");\n","'use strict';\r\n\r\nclass Chunck {\r\n    constructor(id, state, points_list){\r\n        this.id = id;\r\n        this.state = state;\r\n        this.draw_poins = points_list;\r\n        \r\n        this.normal_color = '#000000';\r\n        this.negative_color = '#FF0000';\r\n        this.positive_color = '#00FF00';\r\n        this.color = this.normal_color;\r\n    }\r\n}\r\n\r\n// TODO: пока старвый вариант мне нравится больше надо посмотреть ES6\r\n// const _Chunck = Chunck;\r\n// export { _Chunck as Chunck };\r\n\r\nexports.Chunck = Chunck;","'use strict';\r\nvar chunck = require('./chunck');\r\nvar websocket = require('./websockets');\r\nvar mouse_manager = require('./mouse_manager');\r\n\r\nvar canvas;\r\nvar ctx;\r\nvar MousManager;\r\nvar selectChunck;\r\n\r\nvar MessageIntervalID = null;\r\n\r\n// Заглушки.\r\nvar grid_coordinats = {\r\n    // [0]: new chunck.Chunck(0, [[0, 0],     [100, 0],   [100, 100], [0, 100]]),\r\n    // [1]:new chunck.Chunck(0, [[100, 0],   [200, 0],   [200, 100], [100, 100]]),\r\n    // [2]:new chunck.Chunck(0, [[200, 0],   [300, 0],   [300, 100], [200, 100]]),\r\n\r\n    // [3]:new chunck.Chunck(0, [[0,100],   [100, 100], [100, 200], [0, 200]]),\r\n    // [4]:new chunck.Chunck(0, [[100,100], [200, 100], [200, 200], [200, 100]]),\r\n    // [5]:new chunck.Chunck(0, [[200,100], [300, 100], [300, 200], [200, 200]]),\r\n\r\n    // [6]:new chunck.Chunck(0, [[0,200],   [100, 200], [100, 300], [0, 300]]),\r\n    // [7]:new chunck.Chunck(0, [[100,200], [200, 200], [200, 300], [100, 300]]),\r\n    // [8]:new chunck.Chunck(0, [[200,200], [300, 200], [300, 300], [200, 300]]),\r\n}\r\n\r\n// Запуск приложения после загрузки html страницы.\r\nif (document.readyState != 'loading'){\r\n    app_start();\r\n} else {\r\n    document.addEventListener('DOMContentLoaded', app_start);\r\n}\r\n//-------------------------------------------------------------//\r\n\r\nfunction app_start(){\r\n    canvas = document.getElementById('myCanvas');\r\n    ctx = canvas.getContext('2d');\r\n    websocket.connect();\r\n    MousManager = new mouse_manager.MouseManager(canvas);\r\n    game_loop();\r\n}\r\n\r\nfunction game_loop(){\r\n    set_chuncks_color();\r\n    draw_grid();\r\n\r\n    requestAnimationFrame(game_loop);\r\n}\r\n\r\nfunction draw_grid(){\r\n    // Очищаем канвас.\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    for (var key in grid_coordinats){\r\n        ctx.strokeStyle = grid_coordinats[key].color;\r\n        let chunck_points = grid_coordinats[key].draw_poins\r\n        ctx.beginPath();\r\n        ctx.moveTo(chunck_points[0][0], chunck_points[0][1]);\r\n        for (let pos_index = 1; pos_index < chunck_points.length; pos_index++){\r\n            ctx.lineTo(chunck_points[pos_index][0], chunck_points[pos_index][1])\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        if (grid_coordinats[key].state == 1) {\r\n            //Надо нарисовать крестик\r\n            let draw_poins = grid_coordinats[key].draw_poins\r\n            let centerX = draw_poins[0][0] + 50\r\n            let centerY = draw_poins[0][1] + 50\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(centerX, centerY);\r\n            ctx.lineTo(centerX - 25, centerY - 25)\r\n            ctx.lineTo(centerX, centerY)\r\n\r\n            ctx.lineTo(centerX + 25, centerY - 25)\r\n            ctx.lineTo(centerX, centerY)\r\n\r\n            ctx.lineTo(centerX + 25, centerY + 25)\r\n            ctx.lineTo(centerX, centerY)\r\n\r\n            ctx.lineTo(centerX - 25, centerY + 25)\r\n            ctx.lineTo(centerX, centerY)\r\n            \r\n            ctx.stroke();\r\n\r\n        } else if (grid_coordinats[key].state == 2){\r\n            let draw_poins = grid_coordinats[key].draw_poins\r\n            let centerX = draw_poins[0][0] + 50\r\n            let centerY = draw_poins[0][1] + 50\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(centerX,centerY, 25, 0, Math.PI*2, true);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nfunction set_grid(new_map) {\r\n    grid_coordinats = [];\r\n    for (var key in new_map){\r\n        let newChunck = new chunck.Chunck(\r\n            new_map[key].id,\r\n            new_map[key].state,\r\n            new_map[key].coordinates\r\n        );\r\n\r\n        grid_coordinats[key] = newChunck;\r\n    } \r\n}\r\n\r\nfunction set_chuncks_color(){\r\n    // TODO: интересно, что правильнее, собрать информацию о том, с каким чанком мы пересечены и после\r\n    // пробегатся - задавая цвет, или все делать в одном цикле???\r\n    for (var key in grid_coordinats){\r\n        let is_collision = check_collision(grid_coordinats[key])\r\n        \r\n        if (is_collision){\r\n            selectChunck = grid_coordinats[key]\r\n            if (grid_coordinats[key].state == 0){\r\n                grid_coordinats[key].color = grid_coordinats[key].positive_color\r\n            } else{\r\n                grid_coordinats[key].color = grid_coordinats[key].negative_color\r\n            }\r\n        } else {\r\n            grid_coordinats[key].color = grid_coordinats[key].normal_color\r\n        }\r\n    }\r\n} \r\n\r\n// Данный метод - некоторого рода защита на клиенте -\r\n// мы не должны отправлять запрос, если клетка занята.\r\nfunction check_collision(cunck_for_check){\r\n    var result = false;\r\n    var resultList = [];\r\n\r\n    for (let i = 0; i < cunck_for_check.draw_poins.length - 1; i++){ \r\n        let pos1X = cunck_for_check.draw_poins[i][0];\r\n        let pos1Y = cunck_for_check.draw_poins[i][1];\r\n\r\n        let pos2X = cunck_for_check.draw_poins[i + 1][0];\r\n        let pos2Y = cunck_for_check.draw_poins[i + 1][1];\r\n\r\n        resultList.push(\r\n            (pos2X - pos1X) * (MousManager.Y - canvas.offsetTop - pos1Y) - (pos2Y - pos1Y) * (MousManager.X - canvas.offsetLeft - pos1X)\r\n        )\r\n    }\r\n\r\n    if (resultList.length > 0){\r\n        result = resultList.every(function (element){\r\n            return element >= 0;\r\n        })\r\n    }    \r\n\r\n    return result\r\n}\r\n\r\nfunction set_chunck_state(){\r\n    if(selectChunck != undefined){\r\n        if (selectChunck.state == 0){\r\n            websocket.set_chunck_state(selectChunck.id)\r\n        } else {\r\n            // Защита на клиенте.\r\n            send_error(\"Нельзя изменить значение!\");\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n// Необходимо вывести ошибку.\r\nfunction send_error(message=\"\"){\r\n    var messageLabel = document.getElementById('messageLabel');\r\n\r\n    if (MessageIntervalID != null && message == \"\"){\r\n        clearInterval(MessageIntervalID);\r\n        MessageIntervalID = null;\r\n        messageLabel.innerText = \"\";\r\n        return\r\n    }\r\n\r\n    if (message != \"\" && MessageIntervalID != null){\r\n        clearInterval(MessageIntervalID);\r\n        MessageIntervalID = null;\r\n        messageLabel.innerText = \"\";\r\n    }\r\n\r\n    messageLabel.innerText = message;\r\n\r\n    MessageIntervalID = setInterval(send_error, 5000);\r\n}\r\n\r\nexports.set_grid = set_grid;\r\nexports.set_chunck_state = set_chunck_state;\r\nexports.send_error = send_error;","var main = require('./main')\r\n\r\nclass MouseManager {\r\n    // не понимаю почему импорт канваса не дает результата...\r\n    constructor(canvas){\r\n        var X = 0;\r\n        var Y = 0;\r\n\r\n        canvas.addEventListener('mousemove', this.mouseMove.bind(this));\r\n        canvas.addEventListener('click', this.mouseClick.bind(this));\r\n    }\r\n\r\n    mouseMove(event){\r\n        this.X = event.pageX;\r\n        this.Y = event.pageY;\r\n    }\r\n\r\n    mouseClick(event){\r\n        main.set_chunck_state();\r\n    }\r\n}\r\n\r\n\r\n\r\nexports.MouseManager = MouseManager;","'use strict';\r\n\r\nvar main = require('./main');\r\n\r\nvar ws\r\n\r\n// Набор функций получаемых от сервера\r\nvar handlers = {\r\n    'set_grid': set_grid,\r\n    'send_error': send_error,\r\n};\r\n\r\n// Пошла работа с websockets\r\nfunction connect(){\r\n    // Здесь происходит падение если не можем подключится, надо красиво обработать...\r\n    ws = new WebSocket('ws://127.0.0.1:8081/appgame');\r\n    ws.onopen = open;\r\n    ws.onclose = close;\r\n    ws.onmessage = message;\r\n}\r\n\r\n// websocket стартанул.\r\nfunction open(event){\r\n    console.log('websocket is open!');\r\n}\r\n\r\n// websocket закрылся.\r\nfunction close(event){\r\n    console.log('websocket is close!');\r\n}\r\n\r\n// пришло сообщение по websocket.\r\nfunction message(event){\r\n    var data = JSON.parse(event.data);\r\n    handlers[data['handler_name']](JSON.parse(data['data']));\r\n}\r\n\r\n// ------------- incoming ------------------\r\n// Пришла сетка.\r\nfunction set_grid(new_map){\r\n    main.set_grid(new_map);\r\n}\r\n\r\n// Пришла ошибка от сервера.\r\nfunction send_error(message){\r\n    main.send_error(message);\r\n}\r\n\r\n// Отправляем запрос на постановку символа в чанк\r\nfunction set_chunck_state(chunck_id){\r\n    var data = {\r\n        'chunck_id': chunck_id\r\n    }\r\n\r\n    var message = {\r\n        'handler_name': 'setChunckState',\r\n        'data': JSON.stringify(data)\r\n    }\r\n\r\n    ws.send(JSON.stringify(message));\r\n}\r\n\r\nexports.connect = connect;\r\nexports.set_chunck_state = set_chunck_state;"],"sourceRoot":""}