{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/src/chunck.js","webpack:///./js/src/main.js","webpack:///./js/src/mouse_manager.js","webpack:///./js/src/websockets.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;;AAEX,wB;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kCAAkC;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,K;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,C;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,2CAA2C,M;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,K;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wC;;;;;;;;;;;AC5NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA,oC;;;;;;;;;;;;ACxBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4C","file":"main_build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/src/main.js\");\n","'use strict';\n\nclass Chunck {\n    constructor(id, state, points_list){\n        this.id = id;\n        this.state = state;\n        this.draw_poins = points_list;\n        \n        this.normal_color = '#000000';\n        this.negative_color = '#FF0000';\n        this.positive_color = '#00FF00';\n        this.color = this.normal_color;\n    }\n}\n\n// TODO: пока старвый вариант мне нравится больше надо посмотреть ES6\n// const _Chunck = Chunck;\n// export { _Chunck as Chunck };\n\nexports.Chunck = Chunck;","'use strict';\nvar chunck = require('./chunck');\nvar websocket = require('./websockets');\nvar mouse_manager = require('./mouse_manager');\n\nvar canvas;\nvar ctx;\nvar MousManager;\nvar selectChunck;\n\nvar MessageIntervalID = null;\n\n// Заглушки.\nvar grid_coordinats = {\n    // [0]: new chunck.Chunck(0, [[0, 0],     [100, 0],   [100, 100], [0, 100]]),\n    // [1]:new chunck.Chunck(0, [[100, 0],   [200, 0],   [200, 100], [100, 100]]),\n    // [2]:new chunck.Chunck(0, [[200, 0],   [300, 0],   [300, 100], [200, 100]]),\n\n    // [3]:new chunck.Chunck(0, [[0,100],   [100, 100], [100, 200], [0, 200]]),\n    // [4]:new chunck.Chunck(0, [[100,100], [200, 100], [200, 200], [200, 100]]),\n    // [5]:new chunck.Chunck(0, [[200,100], [300, 100], [300, 200], [200, 200]]),\n\n    // [6]:new chunck.Chunck(0, [[0,200],   [100, 200], [100, 300], [0, 300]]),\n    // [7]:new chunck.Chunck(0, [[100,200], [200, 200], [200, 300], [100, 300]]),\n    // [8]:new chunck.Chunck(0, [[200,200], [300, 200], [300, 300], [200, 300]]),\n}\n\n// Запуск приложения после загрузки html страницы.\nif (document.readyState != 'loading'){\n    app_start();\n} else {\n    document.addEventListener('DOMContentLoaded', app_start);\n}\n//-------------------------------------------------------------//\n\nfunction app_start(){\n    canvas = document.getElementById('myCanvas');\n    ctx = canvas.getContext('2d');\n    websocket.connect();\n    MousManager = new mouse_manager.MouseManager(canvas);\n    var roomCatalog = document.getElementById(\"roomCatalog\");\n    setRoomCatalog([1,2,3])\n    roomCatalog.addEventListener(\"change\", changeRoom);\n\n    game_loop();\n}\n\nfunction game_loop(){\n    set_chuncks_color();\n    draw_grid();\n\n    requestAnimationFrame(game_loop);\n}\n\nfunction draw_grid(){\n    // Очищаем канвас.\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    for (var key in grid_coordinats){\n        ctx.strokeStyle = grid_coordinats[key].color;\n        let chunck_points = grid_coordinats[key].draw_poins\n        ctx.beginPath();\n        ctx.moveTo(chunck_points[0][0], chunck_points[0][1]);\n        for (let pos_index = 1; pos_index < chunck_points.length; pos_index++){\n            ctx.lineTo(chunck_points[pos_index][0], chunck_points[pos_index][1])\n        }\n        ctx.closePath();\n        ctx.stroke();\n\n        if (grid_coordinats[key].state == 1) {\n            //Надо нарисовать крестик\n            let draw_poins = grid_coordinats[key].draw_poins\n            let centerX = draw_poins[0][0] + 50\n            let centerY = draw_poins[0][1] + 50\n\n            ctx.beginPath();\n            ctx.moveTo(centerX, centerY);\n            ctx.lineTo(centerX - 25, centerY - 25)\n            ctx.lineTo(centerX, centerY)\n\n            ctx.lineTo(centerX + 25, centerY - 25)\n            ctx.lineTo(centerX, centerY)\n\n            ctx.lineTo(centerX + 25, centerY + 25)\n            ctx.lineTo(centerX, centerY)\n\n            ctx.lineTo(centerX - 25, centerY + 25)\n            ctx.lineTo(centerX, centerY)\n            \n            ctx.stroke();\n\n        } else if (grid_coordinats[key].state == 2){\n            let draw_poins = grid_coordinats[key].draw_poins\n            let centerX = draw_poins[0][0] + 50\n            let centerY = draw_poins[0][1] + 50\n\n            ctx.beginPath();\n            ctx.arc(centerX,centerY, 25, 0, Math.PI*2, true);\n            ctx.stroke();\n        }\n    }\n}\n\nfunction set_grid(new_map) {\n    grid_coordinats = [];\n    for (var key in new_map){\n        let newChunck = new chunck.Chunck(\n            new_map[key].id,\n            new_map[key].state,\n            new_map[key].coordinates\n        );\n\n        grid_coordinats[key] = newChunck;\n    } \n}\n\nfunction set_chuncks_color(){\n    // TODO: интересно, что правильнее, собрать информацию о том, с каким чанком мы пересечены и после\n    // пробегатся - задавая цвет, или все делать в одном цикле???\n    for (var key in grid_coordinats){\n        let is_collision = check_collision(grid_coordinats[key])\n        \n        if (is_collision){\n            selectChunck = grid_coordinats[key]\n            if (grid_coordinats[key].state == 0){\n                grid_coordinats[key].color = grid_coordinats[key].positive_color\n            } else{\n                grid_coordinats[key].color = grid_coordinats[key].negative_color\n            }\n        } else {\n            grid_coordinats[key].color = grid_coordinats[key].normal_color\n        }\n    }\n} \n\n// Данный метод - некоторого рода защита на клиенте -\n// мы не должны отправлять запрос, если клетка занята.\nfunction check_collision(cunck_for_check){\n    var result = false;\n    var resultList = [];\n\n    for (let i = 0; i < cunck_for_check.draw_poins.length - 1; i++){ \n        let pos1X = cunck_for_check.draw_poins[i][0];\n        let pos1Y = cunck_for_check.draw_poins[i][1];\n\n        let pos2X = cunck_for_check.draw_poins[i + 1][0];\n        let pos2Y = cunck_for_check.draw_poins[i + 1][1];\n\n        resultList.push(\n            (pos2X - pos1X) * (MousManager.Y - canvas.offsetTop - pos1Y) - (pos2Y - pos1Y) * (MousManager.X - canvas.offsetLeft - pos1X)\n        )\n    }\n\n    if (resultList.length > 0){\n        result = resultList.every(function (element){\n            return element >= 0;\n        })\n    }    \n\n    return result\n}\n\nfunction set_chunck_state(){\n    if(selectChunck != undefined){\n        if (selectChunck.state == 0){\n            websocket.set_chunck_state(selectChunck.id)\n        } else {\n            // Защита на клиенте.\n            send_error(\"Нельзя изменить значение!\");\n        }\n        \n    }\n}\n\n\n// Необходимо вывести ошибку.\nfunction send_error(message=\"\"){\n    var messageLabel = document.getElementById('messageLabel');\n\n    if (MessageIntervalID != null && message == \"\"){\n        clearInterval(MessageIntervalID);\n        MessageIntervalID = null;\n        messageLabel.innerText = \"\";\n        return\n    }\n\n    if (message != \"\" && MessageIntervalID != null){\n        clearInterval(MessageIntervalID);\n        MessageIntervalID = null;\n        messageLabel.innerText = \"\";\n    }\n\n    messageLabel.innerText = message;\n\n    MessageIntervalID = setInterval(send_error, 5000);\n}\n\nfunction setRoomCatalog(roomsList){\n    var roomCatalog = document.getElementById(\"roomCatalog\");\n    // сначала очищу список.\n    while (roomCatalog.length > 0){\n        roomCatalog.remove(roomCatalog.length-1);\n    }\n\n    // А теперь заполняем.\n    for ( let i = 0; i < roomsList.length; i++) {\n        let option = document.createElement(\"option\");\n        option.value = roomsList[i];\n        option.text = roomsList[i];\n        roomCatalog.add(option);\n    }\n}\n\nfunction changeRoom(event){\n    websocket.sendChangeRoomID(event.target.value)\n}\n\nexports.set_grid = set_grid;\nexports.set_chunck_state = set_chunck_state;\nexports.send_error = send_error;\nexports.setRoomCatalog = setRoomCatalog;","var main = require('./main')\n\nclass MouseManager {\n    // не понимаю почему импорт канваса не дает результата...\n    constructor(canvas){\n        var X = 0;\n        var Y = 0;\n\n        canvas.addEventListener('mousemove', this.mouseMove.bind(this));\n        canvas.addEventListener('click', this.mouseClick.bind(this));\n    }\n\n    mouseMove(event){\n        this.X = event.pageX;\n        this.Y = event.pageY;\n    }\n\n    mouseClick(event){\n        main.set_chunck_state();\n    }\n}\n\n\n\nexports.MouseManager = MouseManager;","'use strict';\n\nvar main = require('./main');\n\nvar ws\n\n// Набор функций получаемых от сервера\nvar handlers = {\n    'set_grid': set_grid,\n    'send_error': send_error,\n    'set_rooms_catalog': set_rooms_catalog,\n};\n\n// Пошла работа с websockets\nfunction connect(){\n    // Здесь происходит падение если не можем подключится, надо красиво обработать...\n    ws = new WebSocket('ws://127.0.0.1:8081/appgame');\n    ws.onopen = open;\n    ws.onclose = close;\n    ws.onmessage = message;\n}\n\n// websocket стартанул.\nfunction open(event){\n    console.log('websocket is open!');\n}\n\n// websocket закрылся.\nfunction close(event){\n    console.log('websocket is close!');\n}\n\n// пришло сообщение по websocket.\nfunction message(event){\n    var data = JSON.parse(event.data);\n    handlers[data['handler_name']](JSON.parse(data['data']));\n}\n\n// ------------- incoming ------------------\n// Пришла сетка.\nfunction set_grid(new_map){\n    main.set_grid(new_map);\n}\n\n// Пришла ошибка от сервера.\nfunction send_error(message){\n    main.send_error(message);\n}\n\n// Отправляем запрос на постановку символа в чанк\nfunction set_chunck_state(chunck_id){\n    var data = {\n        'chunck_id': chunck_id\n    }\n\n    var message = {\n        'handler_name': 'setChunckState',\n        'data': JSON.stringify(data)\n    }\n\n    ws.send(JSON.stringify(message));\n}\n\nfunction sendChangeRoomID(roomID){\n    var data = {\n        'room_id': parseInt(roomID)\n    }\n\n    var message = {\n        'handler_name': 'chengeRoomID',\n        'data': JSON.stringify(data)\n    }\n\n    console.log(\"Отправляем id = \", message)\n\n    ws.send(JSON.stringify(message));\n}\n\nfunction set_rooms_catalog(roomsIDs){\n    console.log(\"Католог комнат:\", roomsIDs)\n    main.setRoomCatalog(roomsIDs);\n}\n\nexports.connect = connect;\nexports.set_chunck_state = set_chunck_state;\nexports.sendChangeRoomID = sendChangeRoomID;"],"sourceRoot":""}